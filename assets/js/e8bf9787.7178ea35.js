"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[739],{6121:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/text2tab/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Installation","href":"/text2tab/docs/installation","docId":"installation","unlisted":false},{"type":"link","label":"Parsing options and features","href":"/text2tab/docs/parsing-options","docId":"parsing-options","unlisted":false},{"type":"link","label":"Deep parsing","href":"/text2tab/docs/deep-parsing","docId":"deep-parsing","unlisted":false},{"type":"link","label":"Error handling","href":"/text2tab/docs/error-handling","docId":"error-handling","unlisted":false},{"type":"link","label":"Serialization","href":"/text2tab/docs/serialization","docId":"serialization","unlisted":false},{"type":"link","label":"Utilities","href":"/text2tab/docs/utilities","docId":"utilities","unlisted":false}]},"docs":{"deep-parsing":{"id":"deep-parsing","title":"Deep parsing","description":"If you have a target data with deep fields - tables or structures - it is possible to fill them in one run. For this you have to create a data source provider implementing ziftext2tabdeepprovider and pass it to the parser. An example of implementation can be found in mockuploader. But let\'s consider an simple example here.","sidebar":"tutorialSidebar"},"error-handling":{"id":"error-handling","title":"Error handling","description":"Error message redefinition","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installation","description":"You can install the whole code using abapGit.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Text2tab is an utility to parse TAB-delimited text into an internal table of an arbitrary flat structure.","sidebar":"tutorialSidebar"},"parsing-options":{"id":"parsing-options","title":"Parsing options and features","description":"Field name remapping","sidebar":"tutorialSidebar"},"serialization":{"id":"serialization","title":"Serialization","description":"To do serialization use ZCLTEXT2TABSERIALIZER class. Flat tables and structures are supported. In case of a structure it is serialized as one-line table.","sidebar":"tutorialSidebar"},"utilities":{"id":"utilities","title":"Utilities","description":"Checking version","sidebar":"tutorialSidebar"}}}}')}}]);