<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://github.com/text2tab/blog</id>
    <title>Text2Tab Blog</title>
    <updated>2018-09-02T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://github.com/text2tab/blog"/>
    <subtitle>Text2Tab Blog</subtitle>
    <icon>https://github.com/text2tab/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Abap tab-delimited text serializer]]></title>
        <id>https://github.com/text2tab/blog/tab-delimited-text-serializer</id>
        <link href="https://github.com/text2tab/blog/tab-delimited-text-serializer"/>
        <updated>2018-09-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[My first article on this topic was quite a while ago - Abap tab-delimited text parser - Since then I added some improvements to the project.]]></summary>
        <content type="html"><![CDATA[<p>My first article on this topic was quite a while ago - <a href="https://github.com/text2tab/blog/tab-delimited-text-parser">Abap tab-delimited text parser</a> - Since then I added some improvements to the project.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="serializer---new-feature">Serializer - new feature<a href="https://github.com/text2tab/blog/tab-delimited-text-serializer#serializer---new-feature" class="hash-link" aria-label="Direct link to Serializer - new feature" title="Direct link to Serializer - new feature">​</a></h2>
<p>The main new feature is serializing. <code>ZCL_TEXT2TAB_SERIALIZER</code> class supports serialization of flat tables and structures. Here is how it works:</p>
<div class="language-abap codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-abap codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">data</span><span class="token plain"> lo_serializer </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ref</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> zcl_text2tab_serializer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lo_serializer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> zcl_text2tab_serializer</span><span class="token token-operator punctuation" style="color:#393A34">=&gt;</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" the below params are all optional and have defaults inside</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  i_decimal_sep </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">','</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  i_date_format </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'DMY.'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  i_max_frac_digits </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token plain"> </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" For floats only ! not for decimals</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  i_use_lf </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> abap_true </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" to use LF as line-break (not CRLF)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">data</span><span class="token plain"> lv_string </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lv_string </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lo_serializer</span><span class="token token-operator punctuation" style="color:#393A34">-&gt;</span><span class="token plain">serialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> lt_some_table </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The produced result would be something like:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">NAME BIRTHDATE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ALEX 01.01.1990</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">JOHN 02.02.1995</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LARA 03.03.2000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As can be seen from the code you can parametrize the date and amount formatting. E.g. for dates you can define the order of day, month and year and the separator symbol (the 4th char of the parameter)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-parser-improvements">The parser improvements<a href="https://github.com/text2tab/blog/tab-delimited-text-serializer#the-parser-improvements" class="hash-link" aria-label="Direct link to The parser improvements" title="Direct link to The parser improvements">​</a></h2>
<p>The parser itself got some improvements</p>
<ul>
<li>Support for LF line breaks. Before just CRLF was supported, and now it is auto-detected</li>
<li>Support for double quotes around the field value (removed during the parsing)</li>
<li>Support for specifying the date format - same logic like in serializer (e.g. <code>DMY.</code> would expect dates like <code>01.09.2018</code>)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="type-less-parsing">Type-less parsing<a href="https://github.com/text2tab/blog/tab-delimited-text-serializer#type-less-parsing" class="hash-link" aria-label="Direct link to Type-less parsing" title="Direct link to Type-less parsing">​</a></h3>
<p>The most noticeable change is type-less parsing. The parsed data is not validated against any specific structure. Instead it just reads the header line and dynamically creates the line structure out of it where each field is string and parsed without additional conversion. For example:</p>
<div class="language-abap codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-abap codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lr_data   </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ref</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">to</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lt_fields </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> string_table</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">zcl_text2tab_parser</span><span class="token token-operator punctuation" style="color:#393A34">=&gt;</span><span class="token plain">create_typeless</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">-&gt;parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">exporting</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i_data      </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> my_get_some_raw_text_data</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">importing</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    e_head_fields </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lt_fields  </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" Contain the list of field names</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    e_container   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lr_data </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" The container is created inside the parser</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="Debugger view" src="https://github.com/text2tab/assets/images/tab-delimited-text-serializer-debug-5eb9ef441d80734087564154f7fba034.png" width="855" height="103" class="img_ev3q"></p>
<p>The <code>e_container</code> will receive the data ref to the parsed table. For the data example in paragraph 1 the line type would contain respectively 2 fields: <code>NAME</code> and <code>BIRTHDATE</code> of string type each. The table can be e.g. passed to SALV.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="technical-changes">Technical changes<a href="https://github.com/text2tab/blog/tab-delimited-text-serializer#technical-changes" class="hash-link" aria-label="Direct link to Technical changes" title="Direct link to Technical changes">​</a></h2>
<p>In the previous version the code lived in local classes in includes. Now the classes are global and also changed their names. The product is now called <strong>TEXT2TAB</strong> and not <em>DATA_PARSER</em>. Well, that's because is not some abstract 'data' actually but tab-delimited text processor ... and also it is not only the 'parser' anymore ...</p>
<p>The code is open sourced and can be found in this <a href="https://github.com/sbcgua/text2tab" target="_blank" rel="noopener noreferrer">github repository</a>.</p>
<p>The best way to install the tool would be <a href="https://github.com/abapGit/abapGit" target="_blank" rel="noopener noreferrer">abapGit</a> - this is an amazing developer tool, if you haven't tried it yet, you really should.</p>
<p>P.S. <em>Originally posted at <a href="https://community.sap.com/t5/application-development-and-automation-blog-posts/text2tab-tab-delimited-text-parser-and-now-also-serializer/ba-p/13365819" target="_blank" rel="noopener noreferrer">SAP Community platform</a> on 2016-Aug-28</em></p>]]></content>
        <author>
            <name>Alexander Tsybulsky</name>
            <uri>https://github.com/sbcgua</uri>
        </author>
        <category label="old" term="old"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Abap tab-delimited text parser]]></title>
        <id>https://github.com/text2tab/blog/tab-delimited-text-parser</id>
        <link href="https://github.com/text2tab/blog/tab-delimited-text-parser"/>
        <updated>2016-08-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I'd like to share a piece of code which might be useful for someone. It is called text2tab (at the time of initial publishing - Abap data parser). Its purpose is parsing of TAB-delimited text into an arbitrary flat structure or internal table. Why TAB-delimited? This is the format which is used automatically if you copy (clipboard) something from Excel - this creates some opportunities for good program usability.]]></summary>
        <content type="html"><![CDATA[<p>I'd like to share a piece of code which might be useful for someone. It is called text2tab (at the time of initial publishing - Abap data parser). Its purpose is parsing of TAB-delimited text into an arbitrary flat structure or internal table. Why TAB-delimited? This is the format which is used automatically if you copy (clipboard) something from Excel - this creates some opportunities for good program usability.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="example">Example<a href="https://github.com/text2tab/blog/tab-delimited-text-parser#example" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h2>
<p>So what does it do. Let's say we have this data in a form of string (<code>CRLF</code> as a line delimiter, <code>TAB</code> as a field delimiter):</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">NAME     BIRTHDATE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ALEX     01.01.1990</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">JOHN     02.02.1995</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LARA     03.03.2000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>... and a corresponding data type and internal table.</p>
<div class="language-abap codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-abap codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">types</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> my_table_type</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">name</span><span class="token plain">      </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> char10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    birthdate </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> datum</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> my_table_type</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">data</span><span class="token plain"> lt_container </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> my_table_type</span><span class="token punctuation" style="color:#393A34">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To parse the string into the container table just add the following code:</p>
<div class="language-abap codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-abap codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lcl_data_parser</span><span class="token token-operator punctuation" style="color:#393A34">=&gt;</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> lt_container </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">-&gt;parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">exporting</span><span class="token plain"> i_data      </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lv_some_string_with_data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">importing</span><span class="token plain"> e_container </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lt_container </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="unstrict-mode">Unstrict mode<a href="https://github.com/text2tab/blog/tab-delimited-text-parser#unstrict-mode" class="hash-link" aria-label="Direct link to Unstrict mode" title="Direct link to Unstrict mode">​</a></h2>
<p>The class supports some additional features, in particular, <strong>unstrict mode</strong> which allow to skip field of the target structure in text - useful when you need to load just several certain fields of a huge data structure (like standard tables in SAP). Let's consider our data type has additional field, unnecessary in the current context:</p>
<div class="language-abap codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-abap codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">types</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">begin</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> my_table_type</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">name</span><span class="token plain">      </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> char10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    city      </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> char40</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">   </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" &lt;&lt; New field, but still just 2 in the text</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    birthdate </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> datum</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">end</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> my_table_type</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lcl_data_parser</span><span class="token token-operator punctuation" style="color:#393A34">=&gt;</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i_pattern       </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lt_container       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i_amount_format </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' .'</span><span class="token plain">         </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" specify thousand and decimal delimiters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">-&gt;parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">exporting</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      i_data      </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lv_some_string_with_data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      i_strict    </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> abap_false     </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" missing city field will not throw an error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      i_has_head  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> abap_true      </span><span class="token eol-comment comment" style="color:#999988;font-style:italic">" headers in the first line of the text</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">importing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      e_container </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lt_container </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Another feature: <code>i_has_head</code> parameter above means that the first line contains tech names of the fields - then the parser uses it to identify existing fields and their order (which may be flexible then).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="use-cases">Use-cases<a href="https://github.com/text2tab/blog/tab-delimited-text-parser#use-cases" class="hash-link" aria-label="Direct link to Use-cases" title="Direct link to Use-cases">​</a></h2>
<ul>
<li>We (our company) use the code for some of our company's products - like <a href="https://vimeo.com/180405740" target="_blank" rel="noopener noreferrer">FI Mass posting tool for SAP</a></li>
<li>We use it in the <a href="https://github.com/sbcgua/mockup_loader" target="_blank" rel="noopener noreferrer">mockup loader</a> - another our openly published tool for unit testing (actually the text2tab was a part of mockup loader initially)</li>
<li>As a tool for mass uploads for custom tables of some other our products (selective backups)</li>
</ul>
<p>The code is free to use under MIT licence and ca be found in this <a href="https://github.com/sbcgua/text2tab" target="_blank" rel="noopener noreferrer">github repository</a>.</p>
<p>Installation can be done with <a href="https://github.com/abapGit/abapGit" target="_blank" rel="noopener noreferrer">abapGit</a> tool.</p>
<p>I hope you find this useful!</p>
<p>P.S. <em>Originally posted at <a href="https://community.sap.com/t5/application-development-and-automation-blog-posts/abap-data-parser-open-source-tab-delimited-text-parser/ba-p/13210322" target="_blank" rel="noopener noreferrer">SAP Community platform</a> on 2016-Aug-28.</em></p>]]></content>
        <author>
            <name>Alexander Tsybulsky</name>
            <uri>https://github.com/sbcgua</uri>
        </author>
        <category label="old" term="old"/>
    </entry>
</feed>